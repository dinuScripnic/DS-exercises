// Copyright Â© Ruben Ruiz Torrubiano <ruben.ruiz at fh-krems dot ac dot at>,
//
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//
//    1. Redistributions of source code must retain the above copyright notice,
//       this list of conditions and the following disclaimer.
//    2. Redistributions in binary form must reproduce the above copyright
//       notice, this list of conditions and the following disclaimer in the
//       documentation and/or other materials provided with the distribution.
//    3. Neither the name of the owner nor the names of its contributors may be
//       used to endorse or promote products derived from this software without
//       specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE LIABLE FOR ANY DIRECT,
// INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
// BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
// OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
// EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//

syntax = "proto3";

package example;

//
// A purchase made by a customer
//
message Purchase {
  int32 purchase_id = 1;
  int32 customer_id = 2;
  repeated int32 articles = 3;
  double total_price = 4;

  enum Type {
    ONLINE = 0;
    RETAIL = 1;
  }

  Type type = 5;
}

//
// Definition of a customer
//
message Customer {
  int32 id = 1;
  string forename = 2;
  string surname = 3;
  int32 ssn = 4;
  string zip_code = 5;
  bool active = 6;
  repeated Purchase purchases = 7;
}

message CustomerServiceResponse {
  bool success = 1;
  string error_message = 2;
  repeated Customer customers = 3;
}

//
// Main service for customer administration
//
service CustomerService {
  //
  // Adds a new customer
  //
  rpc AddCustomer(Customer) returns (CustomerServiceResponse);

  //
  // Adds a number of purchases for a customer
  //
  rpc SendPurchases(stream Purchase) returns (CustomerServiceResponse);
}
